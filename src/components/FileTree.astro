---
import FileTreeNode from './FileTreeNode.astro';

let path = Astro.url.pathname.slice(1)

let pageSlug = path.startsWith('@') ? path.slice(1) : path;

const allPages = import.meta.glob('../**/*.mdx', { eager: true });

let pagePath = `../members/${pageSlug}.mdx`;
let pageModule: any = allPages[pagePath];
if (!pageModule) {
    pagePath = `../members/${pageSlug}/index.mdx`;
    pageModule = allPages[pagePath];
}

let parentpath = '../'
if (pagePath.endsWith('/index.mdx')) {
    parentpath = pagePath.replace(/\/index\.mdx$/, '')
} else {
    parentpath = pagePath.split('/').slice(0, -1).join('/');
}

const upperPath = parentpath.split('/').slice(0, -1).join('/');

const upperPage = allPages[`${upperPath}/index.mdx`];

const pathToSlug = (path: string) => {
    if (path.startsWith('../')) path = path.slice(3)
    if (path.startsWith("members")) path = '@' + path.slice(8)
    if (path.endsWith('/index.mdx')) path = path.slice(0, -11)
    if (path.endsWith('.mdx')) path = path.slice(0, -4)
    return '/' + path
}

---

<ul>
    <li>
        <a href={upperPage ? pathToSlug(upperPath) : '/'}>{upperPage ? upperPath.split('/').slice(-1)[0] : 'Root'}</a>
    </li>
    <FileTreeNode
        path={parentpath}
    />
<ul>

<style>

ul, li {
    list-style: none;
    white-space: nowrap;
}

ul {
    padding-left: 0;
    margin: 0;
}

li {
    display: flex;
}

li::before  { content: "📁" }

a {
  color: inherit;
  text-decoration: none;
  display: block;
  width: 100%;
}

</style>





